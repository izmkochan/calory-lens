flask
line-bot-sdk
from flask import Flask, request, abort
from line_bot_sdk import WebhookHandler, LineBotApi
from line_bot_sdk.exceptions import InvalidSignatureError
from line_bot_sdk.models import MessageEvent, TextMessage

app = Flask(__name__)

# ここにLINEのチャネルシークレットとアクセストークンを設定
CHANNEL_SECRET = '2007365306'
CHANNEL_ACCESS_TOKEN = '40f8fdd323bb523d32d82714f4735379'

line_bot_api = LineBotApi(CHANNEL_ACCESS_TOKEN)
handler = WebhookHandler(CHANNEL_SECRET)

# Webhookエンドポイントを定義
@app.route("/webhook", methods=["POST"])
def webhook():
    # リクエストヘッダからLINEの署名を取得
    signature = request.headers['X-Line-Signature']
    # リクエストボディをテキストとして取得
    body = request.get_data(as_text=True)

    try:
        # LINEから送られてきた署名とリクエストボディを検証
        handler.handle(body, signature)
    except InvalidSignatureError:
        # 署名が無効な場合は400エラーを返す
        abort(400)

    return 'OK'

# メッセージイベントのハンドラ
@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    text = event.message.text  # ユーザーが送ったメッセージ
    reply_token = event.reply_token  # 返信用のトークン

    # ユーザーが送ったメッセージをそのまま返信
    line_bot_api.reply_message(
        reply_token,
        TextMessage(text=f"あなたが送ったメッセージ: {text}")
    )

if __name__ == "__main__":
    app.run(debug=True)
